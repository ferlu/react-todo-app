{"version":3,"sources":["components/TodoItem.js","todosData.js","App.js","reportWebVitals.js","index.js"],"names":["handleCheck","console","log","TodoItem","props","className","type","checked","data","completed","onChange","htmlFor","text","todosData","id","App","state","todos","todoItems","this","map","item","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAAA,SAASA,IACPC,QAAQC,IAAI,YAgBCC,MAbf,SAAkBC,GAChB,OACE,sBAAKC,UAAU,YAAf,UACE,uBACEC,KAAK,WACLC,QAASH,EAAMI,KAAKC,UACpBC,SAAUV,IAEZ,uBAAOW,QAAQ,QAAf,SAAwBP,EAAMI,KAAKI,WCgB1BC,EA5BG,CAChB,CACEC,GAAI,EACJF,KAAM,qBACNH,WAAW,GAEb,CACEK,GAAI,EACJF,KAAM,mBACNH,WAAW,GAEb,CACEK,GAAI,EACJF,KAAM,mBACNH,WAAW,GAEb,CACEK,GAAI,EACJF,KAAM,WACNH,WAAW,GAEb,CACEK,GAAI,EACJF,KAAM,mCACNH,WAAW,ICHAM,E,kDAfb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,MAAOJ,GAHG,E,0CAMd,WACE,IAAMK,EAAYC,KAAKH,MAAMC,MAAMG,KAAI,SAACC,GAAD,OACrC,cAAC,EAAD,CAAwBb,KAAMa,GAAfA,EAAKP,OAGtB,OAAO,qBAAKT,UAAU,YAAf,SAA4Ba,Q,GAZrBI,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c54e4daf.chunk.js","sourcesContent":["function handleCheck() {\n  console.log(\"Changed!\");\n}\n\nfunction TodoItem(props) {\n  return (\n    <div className=\"todo-item\">\n      <input\n        type=\"checkbox\"\n        checked={props.data.completed}\n        onChange={handleCheck}\n      />\n      <label htmlFor=\"task1\">{props.data.text}</label>\n    </div>\n  );\n}\n\nexport default TodoItem;\n","const todosData = [\n  {\n    id: 1,\n    text: \"Take out the trash\",\n    completed: true,\n  },\n  {\n    id: 2,\n    text: \"Grocery shopping\",\n    completed: false,\n  },\n  {\n    id: 3,\n    text: \"Clean gecko tank\",\n    completed: false,\n  },\n  {\n    id: 4,\n    text: \"Mow lawn\",\n    completed: true,\n  },\n  {\n    id: 5,\n    text: \"Catch up on Arrested Development\",\n    completed: false,\n  },\n];\n\nexport default todosData;\n","import React from \"react\";\nimport \"./App.css\";\nimport TodoItem from \"./components/TodoItem\";\nimport todosData from \"./todosData\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      todos: todosData,\n    };\n  }\n  render() {\n    const todoItems = this.state.todos.map((item) => (\n      <TodoItem key={item.id} data={item} />\n    ));\n\n    return <div className=\"todo-list\">{todoItems}</div>;\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}